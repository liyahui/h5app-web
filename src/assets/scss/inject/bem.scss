$elementSeparator: '__';
$modifierSeparator: '--';

// 判断当前element是否嵌套在modifier中
@function containsModifier($selector) {
  $selector: selectorToString($selector);
  @if str-index($selector, $modifierSeparator) {
    @return true;
  }
  @else {
    @return false;
  }
}

// selector转为字符串
@function selectorToString($selector) {
  $selector: inspect($selector);
  $selector: str-slice($selector, 2, -2);
  @return $selector;
}

// 获取block名称
@function getBlock($selector) {
  $selector: selectorToString($selector);
  $modifierStart: str-index($selector, $modifierSeparator) - 1;
  @return str-slice($selector, 0, $modifierStart);
}

// block
@mixin B($block) {
  .#{$block} {
    @content;
  }
}

// element
@mixin E($element) {
  $selector: &;
  @at-root {
    @if containsModifier($selector) {
      $block: getBlock($selector);
      #{$selector} {
        #{$block + $elementSeparator +$element} {
          @content;
        }
      }
    }
    @else {
      &#{$elementSeparator + $element} {
        @content;
      }
    }
  }
}

// modifier
@mixin M($modifier) {
  @at-root {
    &#{$modifierSeparator + $modifier} {
      @content;
    }
  }
}
